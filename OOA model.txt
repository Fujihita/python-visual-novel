-------------------------------------------
PROTOTYPE CLASSES
-------------------------------------------
Widget
	__init__() #prototype, overload before use
	set(source)
		self._src = sourc

Graphic: Widget
	_load()
		self._art = ...
	set_default()
	update()

Hideable: Graphic
	hide() -> art = ''
	show() -> load_graphic

Shadeable: Graphic
	shade()		
	unshade()	

Fadeable: Hideable
	fade_into() -> set()
		self._image_fading = ''
	fade_out() -> hide()
	updater()	
	
Printable: Base
	print() -> set()
	updater()

Background: Fadeable

Character: Shadeable

Effect: Hideable

Namebox: Hideable

Dialogbox: Printable

-------------------------------------------
SPECIFIC CLASSES
-------------------------------------------
GameModule # game-specific module
	char_dict = [] #lookup table of character names, moods and their corresponding artwork URIs.
	bg_dict = [] #lookup table of location names, weathers, and their corresponding artwork URIs.

Multilayer
	__init__(bottom_layer, top_layer)
	activate()
	deactivate()

Foreground
	load_layers()
		_character_center_top = Character()
		_character_center_bottom = Character()
		character_center = Multilayer(_character_center_bottom, _character_center_top)
	_name = Namebox()

Scene
	__init__()
		background = Background()
		effect_bottom = Effect()
		foreground = Foreground()
		dialog = Dialogbox()
		effect_top = Effect()

-------------------------------------------
INVOCATIONS
-------------------------------------------
scene.background.set(location)
scene.background.fade_into(location, weather)
scene.background.fade_out()

scene.foreground.character_center.set(name)
scene.foreground.character_center.fade_into(name, mood)
scene.foreground.character_center.speaking()
scene.foreground.character_right.listening()
scene.foreground.character_center.fade_out()

scene.dialog.print("Lorem Ipsum")